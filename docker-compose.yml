version: '2'
networks:
  main:
services:
  postgres:
    build:
      context: .local/postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ~/docker-postgres-data:/var/lib/postgresql
    networks:
      main:
  rabbitmq:
    image: rabbitmq:3.6.5-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      main:
  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    networks:
      - main
  microservice-user:
    depends_on:
      - rabbitmq
      - postgres
    build:
      context: .
      dockerfile: Dockerfile
    image: microservice-user:latest
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      RABBITMQ_URI: amqp://user:password@rabbitmq:5672
      AWAIT_DEPENDENCIES: wait-on tcp:postgres:5432
    links:
      - rabbitmq
      - postgres
    networks:
      main:
    expose:
      - "80"
    ports:
      - "8080:80"
  microservice-notification:
    build:
      context: ../ums.notification
      dockerfile: Dockerfile
    image: microservice-notification:latest
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      RABBITMQ_URI: amqp://user:password@rabbitmq:5672
      PG_URL: ${PG_URL}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_HOST: redis
      WEBHOOK_URL: ${WEBHOOK_URL}
    depends_on:
      - rabbitmq
      - redis
    networks:
      main:
    expose:
      - "80"
    ports:
      - "8081:80"